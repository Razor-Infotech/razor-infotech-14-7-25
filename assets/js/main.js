document.addEventListener('DOMContentLoaded',()=>{const buttons=document.querySelectorAll('.floating-button');const container=document.querySelector('.floating-buttons');const heading=document.querySelector('.hero-title');function elevateHeading(){heading.style.zIndex='10'}
function debounce(func,wait){let timeout;return function(...args){clearTimeout(timeout);timeout=setTimeout(()=>func.apply(this,args),wait)}}
function isMobile(){return window.innerWidth<=768}
function getMaxButtons(){const width=window.innerWidth;if(width<=480)return 10;if(width<=768)return 12;return buttons.length}
function isOverlapping(rect1,rect2){return!(rect1.x+rect1.width<=rect2.x||rect1.x>=rect2.x+rect2.width||rect1.y+rect1.height<=rect2.y||rect1.y>=rect2.y+rect2.height)}
function shuffleButtons(){if(!container||!heading)return;const containerRect=container.getBoundingClientRect();const headingRect=heading.getBoundingClientRect();const exclusionZone={x:headingRect.left-containerRect.left-20,y:headingRect.top-containerRect.top-20,width:headingRect.width+40,height:headingRect.height+40,};const placedButtons=[];const totalButtons=buttons.length;const maxButtonsOnMobile=getMaxButtons();const buttonsToShuffle=isMobile()?Math.min(totalButtons,maxButtonsOnMobile):totalButtons;const buttonsArray=Array.from(buttons).slice(0,buttonsToShuffle);buttonsArray.forEach((button)=>{button.style.left='0px';button.style.top='0px';const buttonRect=button.getBoundingClientRect();const buttonWidth=buttonRect.width;const buttonHeight=buttonRect.height;let attempts=0;const maxAttempts=100;let positionFound=!1;let newX,newY;while(attempts<maxAttempts&&!positionFound){newX=Math.random()*(containerRect.width-buttonWidth);newY=Math.random()*(containerRect.height-buttonHeight);const newRect={x:newX,y:newY,width:buttonWidth,height:buttonHeight};const isOutsideExclusion=newRect.x+newRect.width<exclusionZone.x||newRect.x>exclusionZone.x+exclusionZone.width||newRect.y+newRect.height<exclusionZone.y||newRect.y>exclusionZone.y+exclusionZone.height;let overlaps=placedButtons.some((placed)=>isOverlapping(newRect,placed));if(isOutsideExclusion&&!overlaps){positionFound=!0;placedButtons.push(newRect)}
attempts++}
if(positionFound){requestAnimationFrame(()=>{button.style.transform=`translate(${newX}px, ${newY}px)`;button.style.display='block'})}else{console.warn(`Could not place button "${button.textContent.trim()}" after ${maxAttempts} attempts.`);button.style.display='none'}});buttons.forEach((button,index)=>{button.style.display=index<buttonsToShuffle?'block':'none'})}
function initialize(){elevateHeading();shuffleButtons()}
initialize();const shuffleInterval=isMobile()?7000:5000;setInterval(shuffleButtons,shuffleInterval);window.addEventListener('resize',debounce(()=>{elevateHeading();shuffleButtons()},300))});document.addEventListener('DOMContentLoaded',()=>{const slides=document.querySelectorAll('.rzr-web-abt-slide');const dotsContainer=document.querySelector('.rzr-web-abt-slide-dots');let currentIndex=0;slides.forEach((_,index)=>{const dot=document.createElement('div');dot.classList.add('rzr-web-abt-slide-dot');if(index===0)dot.classList.add('active');dot.addEventListener('click',()=>goToSlide(index));dotsContainer.appendChild(dot)});const dots=document.querySelectorAll('.rzr-web-abt-slide-dot');function goToSlide(index){document.querySelector('.rzr-web-abt-slide-wrapper').style.transform=`translateX(-${index * 100}%)`;slides[currentIndex].classList.remove('active');slides[index].classList.add('active');dots[currentIndex].classList.remove('active');dots[index].classList.add('active');currentIndex=index}
setInterval(()=>{let nextIndex=(currentIndex+1)%slides.length;goToSlide(nextIndex)},5000)})